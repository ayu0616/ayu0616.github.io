FROM node:22-alpine AS base

ENV PNPM_HOME=/pnpm

WORKDIR /app
RUN corepack enable pnpm

FROM base AS builder

COPY package.json pnpm-lock.yaml ./
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile

COPY . .
COPY blog-contents.zip /app/blog-contents.zip
RUN rm blog-contents && unzip blog-contents.zip
RUN --mount=type=cache,id=next,target=/app/.next/cache pnpm build

ENV NODE_ENV=production

RUN pnpm prune --prod

FROM base AS production


ENV NODE_ENV=production

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=public.ecr.aws/awsguru/aws-lambda-adapter:0.7.0 --chown=nextjs:nodejs /lambda-adapter /opt/extensions/lambda-adapter

COPY --from=builder --chown=nextjs:nodejs /app/public /app/public
COPY --from=builder --chown=nextjs:nodejs /app/.next/static /app/.next/static
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone /app/

USER nextjs

EXPOSE 3000
ENV PORT 3000

CMD node ./server.js
